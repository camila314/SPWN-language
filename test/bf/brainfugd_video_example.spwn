bob = { group: 42g, center: 3g, arrow: 4g, block: 3b }
dir = counter(0) // counter storing bob's current direction
gs = import gamescene
// button_a: change direction
on(gs.button_a(), !{
    bob.arrow.rotate(bob.center, 90) // rotate arrow
    if dir == 3 { // increment direction counter
        wait()
        dir -= 3
    } else {
        wait()
        dir += 1
    }
})
// create a list of trigger functions for each move direction
let move_funcs = []
dirs = [[0, 1], [1, 0], [0, -1], [-1, 0]]
for d in dirs {
    move_funcs.push(!{
        bob.group.move(d[0] * 300, d[1] * 300, 10)
    })
}
// stops all movement
stop_moving = !{
    for f in move_funcs {
        f.start_group.stop()
    }
}
// button_b: movement
on(gs.button_b(), !{
    move_funcs[dir.to_const(..4)]!
})
// stop movement on end of button press
on(gs.button_b_end(), stop_moving)
// wall collision
walls = 4b
on(collision(bob.block, walls), !{
    stop_moving!
    d = dirs[dir.to_const(..4)]
    bob.group.move(d[0] * -5, d[1] * -5, 0.1) // move back by 5 units
})
 // coins
coins = [[13g, 13b], [14g, 14b], [15g, 15b], [16g, 16b], [17g, 17b], [18g, 18b]]
balance = counter(10i)
for coin in coins {
    on(collision(bob.block, coin[1]), !{
        coin[0].toggle_off()
        balance += 1
    })
}
 // lemonade
lemonade_stand = 5b
lemonades = counter(11i)
on(collision(bob.block, lemonade_stand), !{
    if balance >= 3 {
        balance -= 3
        lemonades += 1
    }
})
